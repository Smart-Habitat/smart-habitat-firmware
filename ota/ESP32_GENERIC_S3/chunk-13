dt <io.FileIO %d> <NVS namespace> <Partition type=%u, subtype=%u, address=%u, size=%u, label=%s, encrypted=%u> invalid channel duration and data must have same length No pulses Too many pulses for loop RMT(channel=%u, pin=%u, source_freq=%u, clock_div=%u, idle_level=%u) RMT() channel used by bitstream clock_div must be between 1 and 255 tx_carrier frequency must be >0 tx_carrier duty must be 0..100 ERROR: xtensa bccz out of range ERROR: xtensa bcc out of range asm overflow bad compile mode Plus any modules on the filesystem
 object   is of type %q
  --  NimBLE [0;31mE (%lu) %s: ble_sm_pair_fail_tx failed, rc = %d
[0m
 ble_sm_proc_pool ble_hs_hci_ev_pool ble_gattc_proc_pool [0;31mE (%lu) %s: Required controller version is 4.0 (6)
[0m
 [0;31mE (%lu) %s: Controller doesn't support LE
[0m
 ble_l2cap_sig_proc_pool [0;31mE (%lu) %s: Error while removing IRK
[0m
 [0;31mE (%lu) %s: Error while removing LTK
[0m
 [0;31mE (%lu) %s: No record found for the given address in ble store[0m
 [0;31mE (%lu) %s: mutex init failed with reason %d 
[0m
 ble_gap_update 0x%04hx 0x%08lx %02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x [0;31mE (%lu) %s: Failed to generate local IRK[0m
 [0;31mE (%lu) %s: All channels should have same conn handle
[0m
 [0;31mE (%lu) %s: error: sdu_len > chan->my_coc_mps (%d>%d)
[0m
 ble_l2cap_chan_pool [0;31mE (%lu) %s: failed to configure restored IRK
[0m
 ble_gatts_clt_cfg_pool ble_hs_hci_frag BLE_INIT [0;31mE (%lu) %s: hci inits failed
[0m
 [0;31mE (%lu) %s: hci deinit failed
[0m
 [0;31mE (%lu) %s: controller init failed
[0m
 [0;31mE (%lu) %s: controller enable failed
[0m
 [0;31mE (%lu) %s: nimble host init failed
[0m
 [0;31mE (%lu) %s: nimble host deinit failed
[0m
 [0;31mE (%lu) %s: controller disable failed
[0m
 [0;31mE (%lu) %s: controller deinit failed
[0m
 [0;31mE (%lu) %s: sem init failed with reason: %d 
[0m
 nimble_host msys_1 msys_2 assertion:%s
 line:%d,function:%s
 callout callout->handle ev->event eventq mutex->handle semaphor->handle tmo == 0 ret == pdPASS || ret == errQUEUE_EMPTY ret == pdPASS timeout == 0 [0;33mW (%lu) %s: Timer not deleted[0m
 eventq->q nimble_timer npl funcs init failed ble_freertos_ev_pool ble_freertos_evq_pool ble_freertos_co_pool ble_freertos_sem_pool ble_freertos_mutex_pool rc == 0 [0;31mE (%lu) %s: Host not enabled. Dropping the packet![0m
 [0;31mE (%lu) %s: Received HCI data length at host (%d) exceeds maximum configured HCI event buffer size (%d).[0m
 [0;31mE (%lu) %s: %s failed to os_mbuf_append; rc = %d[0m
 [0;32mI (%lu) %s: Bluetooth MAC: %02x:%02x:%02x:%02x:%02x:%02x[0m
 [0;31mE (%lu) %s: timer start failed[0m
 [0;31mE (%lu) %s: Malloc failed[0m
 [0;31mE (%lu) %s: Invalid controller task prioriy or stack size[0m
 [0;31mE (%lu) %s: %s controller only support BLE only mode[0m
 [0;31mE (%lu) %s: Invalid value of ble_max_act[0m
 [0;31mE (%lu) %s: SLEEP_MODE_1 enabled but sleep clock not configured[0m
 [0;32mI (%lu) %s: BT controller compile version [%s][0m
 btSlp btLS [0;33mW (%lu) %s: light sleep mode will not be able to apply when bluetooth is enabled.[0m
 bt [0;31mE (%lu) %s: invalid mode %d, controller support mode is %d[0m
 transport_pool_cmd transport_pool_evt transport_pool_evt_lo transport_pool_acl ble_hs_conn_pool ble_att_svr_entry_pool ble_att_svr_prep_entry_pool [0;31mE (%lu) %s: ble_hs_stop: failed to terminate connection; rc=%d
[0m
 [0;31mE (%lu) %s: ble_hs_stop_terminate_timeout_cb,%d connection(s) still up 
[0m
 b877d66 EM_ET_OFFSET: 0x%08x, EM_ET_END: 0x%08x
 EM_FT_OFFSET: 0x%08x, EM_FT_END: 0x%08x
 EM_RF_SW_SPI_OFFSET: 0x%08x, EM_RF_SW_SPI_END: 0x%08x
 EM_RF_HW_SPI_OFFSET: 0x%08x, EM_RF_HW_SPI_END: 0x%08x
 EM_ENC_OFFSET: 0x%08x, EM_ENC_END: 0x%08x
 EM_BLE_OFFSET: 0x%08x, EM_BLE_END: 0x%08x
 EM_BLE_CS_OFFSET: 0x%08x, EM_BLE_CS_END: 0x%08x
 EM_BLE_WL_OFFSET: 0x%08x, EM_BLE_WL_END: 0x%08x
 EM_BLE_RAL_OFFSET: 0x%08x, EM_BLE_RAL_END: 0x%08x
 EM_BLE_RX_DESC_OFFSET: 0x%08x, EM_BLE_RX_DESC_END: 0x%08x
 EM_BLE_TX_DESC_OFFSET: 0x%08x, EM_BLE_TX_DESC_END: 0x%08x
 EM_BLE_LLCPTX
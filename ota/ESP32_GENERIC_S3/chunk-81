%02x:%02x:%02x:%02x:%02x:%02x> after unsuccessful auth/assoc, AID = %d station: %02x:%02x:%02x:%02x:%02x:%02x leave, AID = %d, bss_flags is %d, bss:%p ap_probe_send over, resett wifi status to disassoc bcn_timeout,ap_probe_send_start <connect>csa, newchan=%d, old=%d, csa_count:%d primary chan differ, old=%d, new=%d, start CSA timer switch to channel %d auto reconnect no %s found, reconnect after 1s tx ht2040 coex frame: hdr=%d len=%d chan_num=%d Init static tx FG buffer num: %d Init tx cache buffer num: %d Init dynamic tx buffer num: %d Init static tx buffer num: %d Init management short buffer num: %d Init dynamic rx mgmt buffer num: %d Init static rx mgmt buffer num: %d Init data frame dynamic rx buffer num: %d stop sw txq lmac stop hw txq discard flag int: state=%d i=%d Coexist!!! Wi-Fi station would only keep waked when available
 Set ps type: %d, coexist: %d
 (mesh)pm stop, sleep:%lld secs, total:%lld secs, current active set:%d, running:%.02f pm stop, total sleep time: %llu us / %llu us
 set rx beacon pti, rx_bcn_pti: %d, bcn_timeout: %d, mt_pti: %d, mt_time: %d pm start, type: %d
 Coexist!!! Wi-Fi station would only keep waked when available
 AP's beacon interval = %u us, DTIM period = %u And use another outer/mobile-hotspot instead. Please report this bug to the manufaturer of the router/mobile-hotspot. The router/mobile-hotspot does not follow Wi-Fi protocol. There is no TIM IE in Beacon frame. And use another outer/mobile-hotspot instead. Please report this bug to the manufaturer of the router/mobile-hotspot. The router/mobile-hotspot does not follow Wi-Fi protocol. Beacon interval IE of Beacon frame is 0. dp: %u, bi: %u, li: %u, scale listen interval from %u us to %u us wifi driver task: %x, prio:%d, stack:%d, core=%d clear rx fragment Ignore BAR free! Deinit lldesc rx mblock:%d Init dynamic rx buffer num: %d Init static rx buffer num: %d Init static rx buffer size: %d ic_disable_sniffer ic_enable_sniffer <ba-del>idx:%d, tid:%d <ba-add>idx:%d (ifx:%d, %02x:%02x:%02x:%02x:%02x:%02x), tid:%d, ssn:%d, winSize:%d invalid rate, need change phy mode to LR invalid rate invalid interface scan is cancle force witi stop TX Q not empty: %d, TXQ_BLOCK=%x deinit: deinit is in progress deinit: init is in progress init: deinit is in progress init: init is in progress init failed to wifi global lock This was attack!!! <%02x:%02x:%02x:%02x:%02x:%02x> responded within %d SA Query attempts. alloc eb len=%d type=%d fail
 BSS already removed, simply leave... BSS already removed, simply leave... <MESH STA>adjust channel:%d, secondary channel offset:%d(%s) softAP updated bw to 20Mhz <MESH AP>adjust channel:%d, secondary channel offset:%d(%s) IEEE80211 ELEMID VENDOR too big! IEEE80211 ELEMID VENDOR too big! IEEE80211 ELEMID RSN too big! inactive timer: now=%x last_rx_time=%x diff=%x, aid[%d]%02x:%02x:%02x:%02x:%02x:%02x leave inactive timer, bss(%p) is removed b a f
 (error)ic_tx_pkt beacon, failed The previous beacon was not Tx done bcn a f
 bcn a f
 softap interface disabled. stop beacon tx [ADDBA]rx delba, code:%d, delete tid:%d mem fail mem fail mcs set is empty! 40Mhz not supported, updated bw to 20Mhz invalid tid=%d token mismatch, expect=%d(rx:%d), status=%d state wrong txa_flags=%x ba not setup invalid tid=%d invalid free ba index=%d wapi parse: WTF no func pointer defined! Pairwise cipher must be AES-CCM/GCM for PMF %d,  Disable PMF for this connection. Rejecting PMF incapable ciphers for OWE/WPA3/WPA3-EXT-KEY/WPA3+WPA3-EXT-KEY only auth mode Unsupported Group Mgmt cipher %d invalid LLC/SNAP header, drop pkt! ioctl: failed to post WiFi task %d ioctl: failed to get wifi thread sem ioctl_process: wifi thread sem NULL, potential bug, type=%d packet allocation failed
 appie a f
 appie a f
 STA is scanning or connecting, or AP has connected with external STAs, cannot set channel
 Haven't to connect to a suitable AP now! no mem
 wifi init: invalid config init rx buffer number=%d, change to default %d
 Cannot set PMF to optional when in WIFI_AUTH_WPA3_PSK! Setting PMF to required. Cannot set PMF to required when in WIFI_AUTH_WPA_WP
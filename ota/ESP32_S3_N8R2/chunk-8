EPL password? (y/n)  
Would you like to (E)nable or (D)isable it running on boot? WebREPL daemon auto-start status: import webrepl
webrepl.start()
 New password (4-9 chars):  Started webrepl in manual override mode Started webrepl in normal mode Starting webrepl in foreground mode WebREPL is not configured, run 'import webrepl_setup' 
WebREPL connection from: 
Concurrent WebREPL connection from WebREPL server started on http://%s:%d/ "></base>
<script src="webrepl_content.js"></script>
 HTTP/1.0 200 OK

<base href=" HTTP/1.1 101 Switching Protocols
Upgrade: websocket
Connection: Upgrade
Sec-WebSocket-Accept:  258EAFA5-E914-47DA-95CA-C5AB0DC85B11 Upgrade Connection Sec-WebSocket-Key https://micropython.org/webrepl/ Package may be partially installed https://micropython.org/pi/v2 Unable to find lib dir in sys.path Installing {} ({}) from {} to {} https://raw.githubusercontent.com/ Redirect %d not yet supported Location: chunked Transfer-Encoding: HTTP error: BadStatusLine:
%s %x
 %s /%s HTTP/1.0
 {}:{} Task exception wasn't retrieved Websocket connection closed Continuation frames not supported Connection: Upgrade
 Upgrade: websocket
 HTTP/1.1 101 Switching Protocols
 Access-Control-Allow-Headers Access-Control-Request-Headers Access-Control-Allow-Methods Access-Control-Request-Method Access-Control-Expose-Headers Access-Control-Allow-Credentials Access-Control-Allow-Origin {method} {path} {status_code} Starting async server on {host}:{port}... HTTP/1.0 {status_code} {reason}
 Thu, 01 Jan 1970 00:00:01 GMT %a, %d %b %Y %H:%M:%S GMT application/json; charset=UTF-8 application/x-www-form-urlencoded & MQTT connection closed, reconnecting... Deleted desired values from MQTT broker:  Sent new state to MQTT broker Sent state to MQTT broker Collected anonymized data Using default API certificate Using IP specific API certificate Runtime error! Restarting the device is advisable! Sent data through WebSocket Debugging enabled, please connect the device to a computer to start! Automatic update disabled! Automatic update was already enabled! Automatic update enabled! Update has not yet run after boot! New API key not generated! Since no errors were found, marked boot partition as valid! All services started successfully! Restarting device in 10 seconds! Got hash, continuing with services Anonymous telemetry selected $aws/rules/anonymized_data_collection/device/ Using saved device certificates https://httpscert.smarthabitat.in/ Customer id_token found, requesting certificates https://raw.githubusercontent.com/Smart-Habitat/smart-habitat-firmware/refs/heads/master/ota/ Loaded device identifiers! serial device_id PLEASE SAVE THIS API KEY, YOU'LL NEED IT TO COMMUNICATE WITH YOUR DEVICE!! No API keys found, creating new API key... Thank you for choosing Smart Habitat! https://devicecert.smarthabitat.in/ anonymous_data_collection DEVICE REBOOTING IN 10 SECONDS! Couldn't connect to the WiFi! !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz no SHT3X found at bus on SDA pin %d SCL pin %d Set the partition to boot! Wrote to partition blocks:  ERROR!! Download compromised! Erasing reminaing partition blocks before writing the last chunk Download complete! Last chunk remaining to be written to the partition! ERROR!! Got status code:  ERROR!! Upstream version could not be verified as the same, please retry! ERROR!! Upstream version changed! Resuming update from chunk:   individual chunks, each  ERROR!! Update larger than partition space! ERROR!! Upstream version compromised! No update necessary, installed firmware:  Encountered errors during previous few downloads, rebooting! Stopped duplicate update instance! Update will resume after 4 tries and a restart! Trying to resume update after restart... Stopped duplicate update instance! Disconnected, exited _keep_connected Disconnected, exiting _keep_connected About to reconnect with unclean session. Invalid pid in SUBACK packet Invalid pid in PUBACK packet Wi-Fi not started, unable to disconnect interface Connect fail: 0x{:04x} {} (README 7) Connecti
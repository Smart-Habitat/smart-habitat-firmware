uf number %d is out of range dynamic rx buf number %d is out of range static rx buf number %d is out of range wpa crypto funcs expected size=%d version=%d, actual size=%d version=%d invalid magic number %x, call WIFI_INIT_CONFIG_DEFAULT to init config parameter config should not be NULL %s %d
 %s %d
 %s %d
 %s %d
 Channel number %d is out of range from %d to %d in country code cc=%c%c%c. Invalid authmode %d configured for softAP
 Invalid authmode ENABLE WPA3 in config for WPA3_PSK authmode
 sta is connecting, return error init nvs: failed, ret=%x wifi nvs cfg alloc out of memory nvs invalid min %d max %d invalid wifi nvs key index %d %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 Error in constructing dh ie or OWE is not enabled in menuconfig %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 %s %d
 setup rate: out of memory! %s %d
 %s %d
 null wpa_parse_wpa_ie null wpa_parse_wpa_ie AP's AKM suite is 'SAE Extended Key' but %s does not have H2E enabled null wpa_parse_wpa_ie Station SAE H2E disabled, which is required by AP wpa_config_parse_string is null %s %d
 %s %d
 Processing association response failed Set status to INIT Set status to INIT, status:%d(Refused basic rates mismatch). maybe AP accept 11ax-only clients... Association refused temporarily, comeback time %lu (TUs) too long, max allowed 5000 (TUs) %s %d
 invalid ac=%d wpa michael mic failure cb empty %s %d
 %s %d
 %s %d
 Wrong interface provided to get SAE PWE value fail to alloc timer, type=%d fail to post timer, type=%d timeout when WiFi un-init, type=%d timeout but fail to get lock, type=%d %s %d
 invalid channel info invalid channel %s %d
 %s %d
 cnx_bss_init: null bss %s %d
 null wpa_sta_ap_set_rsnxe failed to get bss for bssid=%02x:%02x:%02x:%02x:%02x:%02x sta_scan: STA not exist! ht2040 coex frame alloc fail %s %d
 ebuf_free: invalid type=%d esf_buf_alloc: invalid type=%d esf_buf_alloc_dynamic: invalid type=%d set vif: invalid index=%d %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %s %u
 %s %d %s %u
 %s %u
 create wifi task: failed to create task create wifi task: failed to create sem create wifi task: failed to create queue create wifi task: failed to create queue %s %u
 %s %u
 invalid micahel mic failure cb wifi assert: %d %s %u
 update default trc: invalid ifx trc init fail, no mem rc_enable_trc fail, no mem %s %s %u
 sched is null, if=%d tid=%d flags=%x %s %s %u
 desc is null %s %s %u
 rcGet11BHighestRateIdx: invalid max rate=%d rcGet11GHighestRateIdx: invalid max rate=%d rcGet11NHighestRateIdx: invalid max rate=%d alloc pp wdev funcs fail
 Expected to init %d rx buffer, actual is %d Failed to init rx desc space, buffer number=%d %s %s %u
 Rxd SA Query resp with matching transaction id %x Send SA Query %s with transaction id %x mode : sta (%02x:%02x:%02x:%02x:%02x:%02x) + softAP (%02x:%02x:%02x:%02x:%02x:%02x) mode : softAP (%02x:%02x:%02x:%02x:%02x:%02x) mode : sta (%02x:%02x:%02x:%02x:%02x:%02x) mode : null starting SA query procedure with STA(%02x:%02x:%02x:%02x:%02x:%02x) STA not responded to %d SA Query attempts, Reset connection sending disassoc Removing the station %02x:%02x:%02x:%02x:%02x:%02x WPA3 SAE %02x:%02x:%02x:%02x:%02x:%02x start reauthentication max connection, deauth! max connection, deauth! scan in process, ignore set current channel new:<%d,%d>, old:<%d,%d>, ap:<%d,%d>, sta:<%d,%d>, prof:%d ap channel adjust o:%u,%u n:%u,%u AP not PMF Capable when STA requires, reject profile config nano formating: %s config NVS flash: %s wifi certification version: v%d.%d wifi firmware version: %s flush txq ifx:%d, phymode(new:0x%x, nvs:0x%x) Total power save buffer number: %u rx 40M intolerant in chan %d rx 11g in channel %d %s does not have H2E enabled. Using WPA2-PSK to connect %s does not have H2E enabled. Using WPA2-PSK-SHA256 to connect %s does not have H2E enabled. Using SAE to 
) %s: %s(%d): input param 'raw_data' is NULL[0m
 [0;31mE (%lu) %s: %s(%d): input param 'smooth_data' is NULL[0m
 [0;31mE (%lu) %s: %s(%d): input param 'benchmark' is NULL[0m
 [0;31mE (%lu) %s: %s(%d): uart_num error[0m
 [0;31mE (%lu) %s: %s(%d): data bit error[0m
 [0;31mE (%lu) %s: %s(%d): stop bit error[0m
 [0;31mE (%lu) %s: %s(%d): Invalid src_clk[0m
 [0;31mE (%lu) %s: %s(%d): rx flow thresh error[0m
 [0;31mE (%lu) %s: %s(%d): hw_flowctrl mode error[0m
 [0;31mE (%lu) %s: %s(%d): uart driver error[0m
 [0;31mE (%lu) %s: %s(%d): empty intr threshold error[0m
 [0;31mE (%lu) %s: %s(%d): tx_io_num error[0m
 [0;31mE (%lu) %s: %s(%d): rx_io_num error[0m
 [0;31mE (%lu) %s: %s(%d): rts_io_num error[0m
 [0;31mE (%lu) %s: %s(%d): cts_io_num error[0m
 [0;31mE (%lu) %s: %s(%d): param null[0m
 [0;31mE (%lu) %s: %s(%d): buffer null[0m
 [0;31mE (%lu) %s: %s(%d): uart size error[0m
 [0;31mE (%lu) %s: %s(%d): uart data null[0m
 [0;31mE (%lu) %s: %s(%d): break_num error[0m
 [0;31mE (%lu) %s: rx_buffered_len error[0m
 [0;32mI (%lu) %s: ALREADY NULL[0m
 [0;31mE (%lu) %s: %s(%d): uart rx buffer length error[0m
 [0;31mE (%lu) %s: %s(%d): uart tx buffer length error[0m
 [0;32mI (%lu) %s: ESP_INTR_FLAG_IRAM flag not set while CONFIG_UART_ISR_IN_IRAM is enabled, flag updated[0m
 [0;31mE (%lu) %s: UART driver malloc error[0m
 [0;32mI (%lu) %s: queue free spaces: %lu[0m
 [0;31mE (%lu) %s: UART driver already installed[0m
 [0;31mE (%lu) %s: %s(%d): Could not allocate an interrupt for UART[0m
 [0;31mE (%lu) %s: %s(%d): Could not configure the interrupt for UART[0m
 [0;31mE (%lu) %s: %s(%d): rx fifo full threshold value error[0m
 [0;31mE (%lu) %s: call uart_driver_install API first[0m
 [0;31mE (%lu) %s: tout_thresh = %d > maximum value = %d[0m
 [0;31mE (%lu) %s: %s(%d): timeout other than portMAX_DELAY not supported[0m
 [0;31mE (%lu) %s: %s(%d): Cannot release a lock that hasn't been acquired.[0m
 [0;31mE (%lu) %s: %s(%d): Cannot wait for a device that is not acquired[0m
 ENABLED DISABLED [0;33mW (%lu) %s: invalid min_freq_mhz value (%d)[0m
 [0;33mW (%lu) %s: min_freq_mhz should be >= %d[0m
 [0;33mW (%lu) %s: invalid max_freq_mhz value (%d)[0m
 [0;32mI (%lu) %s: Frequency switching config: CPU_MAX: %d, APB_MAX: %d, APB_MIN: %d, Light sleep: %s[0m
 rtos0 rtos1 bootloader_mmap [0;31mE (%lu) %s: tried to bootloader_mmap twice[0m
 [0;31mE (%lu) %s: spi_flash_mmap failed: 0x%x[0m
 [0;31mE (%lu) %s: No MD5 found in partition table[0m
 [0;31mE (%lu) %s: Partition table MD5 mismatch[0m
 [0;31mE (%lu) %s: load_partitions returned 0x%x[0m
 esp_ota_ops [0;31mE (%lu) %s: not found otadata[0m
 [0;31mE (%lu) %s: mmap otadata filed. Err=0x%8x[0m
 [0;31mE (%lu) %s: invalid partition table, no app partitions[0m
 [0;31mE (%lu) %s: ota data invalid, no current app. Assuming factory[0m
 [0;31mE (%lu) %s: Rollback is not possible, do not have any suitable apps in slots[0m
 [0;32mI (%lu) %s: Rollback to previously worked partition. Restart.[0m
 [0;31mE (%lu) %s: Running firmware is factory[0m
 [0;32mI (%lu) %s: detected chip: %s[0m
 [0;31mE (%lu) %s: failed to get chip size[0m
 [0;33mW (%lu) %s: Detected flash size > 16 MB, but access beyond 16 MB is not supported for this flash model yet.[0m
 [0;32mI (%lu) %s: flash io: %s[0m
 [0;31mE (%lu) %s: esp_flash_get_size failed, flash error code: %d[0m
 [0;31mE (%lu) %s: flash encrypted write address must be 16 bytes aligned[0m
 [0;31mE (%lu) %s: flash encrypted write length must be multiple of 16[0m
 [0;33mW (%lu) %s: get_chip_caps function pointer hasn't been initialized[0m
 [0;31mE (%lu) %s: chip %s doesn't support reading unique id[0m
 qio [0;33mW (%lu) %s: Octal flash chip is using but %s mode is selected, will automatically swich to Octal mode[0m
 [0;31mE (%lu) %s: Detected size(%dk) smaller than the size in the binary image header(%dk). Probe failed.[0m
 [0;33mW (%lu) %s: Detected size(%dk) larger than the size in the binary image header(%dk). Using the size in the binary image header.[0m
 task_wd
IElkZW50aWZpZXIAVR0jAGlkLWNlLWF1dGhvcml0eUtleUlkZW50aWZpZXIAQXV0aG9yaXR5IEtleSBJZGVudGlmaWVyAFUEAwBpZC1hdC1jb21tb25OYW1lAENvbW1vbiBOYW1lAFUEBgBpZC1hdC1jb3VudHJ5TmFtZQBDb3VudHJ5AFUEBwBpZC1hdC1sb2NhbGl0eQBMb2NhbGl0eQBVBAgAaWQtYXQtc3RhdGUAU3RhdGUAVQQKAGlkLWF0LW9yZ2FuaXphdGlvbk5hbWUAT3JnYW5pemF0aW9uAFUECwBpZC1hdC1vcmdhbml6YXRpb25hbFVuaXROYW1lAE9yZyBVbml0AE9VACqGSIb3DQEJAQBlbWFpbEFkZHJlc3MARS1tYWlsIGFkZHJlc3MAVQQFAGlkLWF0LXNlcmlhbE51bWJlcgBTZXJpYWwgbnVtYmVyAFUEEABpZC1hdC1wb3N0YWxBZGRyZXNzAFBvc3RhbCBhZGRyZXNzAFUEEQBpZC1hdC1wb3N0YWxDb2RlAFBvc3RhbCBjb2RlAFUEBABpZC1hdC1zdXJOYW1lAFN1cm5hbWUAU04AVQQqAGlkLWF0LWdpdmVuTmFtZQBHaXZlbiBuYW1lAEdOAFUEKwBpZC1hdC1pbml0aWFscwBJbml0aWFscwBVBCwAaWQtYXQtZ2VuZXJhdGlvblF1YWxpZmllcgBHZW5lcmF0aW9uIHF1YWxpZmllcgBVBAwAaWQtYXQtdGl0bGUAVGl0bGUAVQQuAGlkLWF0LWRuUXVhbGlmaWVyAERpc3Rpbmd1aXNoZWQgTmFtZSBxdWFsaWZpZXIAVQRBAGlkLWF0LXBzZXVkb255bQBQc2V1ZG9ueW0ACZImiZPyLGQBAQBpZC11aWQAVXNlciBJZAAJkiaJk/IsZAEZAGlkLWRvbWFpbkNvbXBvbmVudABEb21haW4gY29tcG9uZW50AFUELQBpZC1hdC11bmlxdWVJZGVudGlmaWVyAFVuaXF1ZSBJZGVudGlmaWVyAFByb2MtVHlwZTogNCxFTkNSWVBURUQAREVLLUluZm86IEFFUy0AREVLLUluZm86IEFFUy0xMjgtQ0JDLABERUstSW5mbzogQUVTLTE5Mi1DQkMsAERFSy1JbmZvOiBBRVMtMjU2LUNCQywAKoZIhvcNAQUMAGNyeXB0b19zaGFyZWRfZ2RtYQAbWzA7MzFtRSAoJWx1KSAlczogRmFpbGVkIHRvIGFjcXVpcmUgRE1BIGNoYW5uZWwsIEVycj0lZBtbMG0KAGVzcF9zaGEAG1swOzMxbUUgKCVsdSkgJXM6IFNIQSB0eXBlICVkIG5vdCBzdXBwb3J0ZWQbWzBtCgAbWzA7MzFtRSAoJWx1KSAlczogSW52YWxpZCB0IGZvciBTSEE1MTIvdCwgdCA9ICV1LGNhbm5vdCBiZSAzODQbWzBtCgAbWzA7MzFtRSAoJWx1KSAlczogSW52YWxpZCB0IGZvciBTSEE1MTIvdCwgdCA9ICV1LCBtdXN0IGVxdWFsIG9yIGxlc3MgdGhhbiA1MTIbWzBtCgBlc3Atc2hhABtbMDszMW1FICglbHUpICVzOiBTSEEgRE1BIGJ1Zl9sZW4gY2Fubm90IGV4Y2VlZCBtYXggc2l6ZSBmb3IgYSBzaW5nbGUgYmxvY2sbWzBtCgAbWzA7MzFtRSAoJWx1KSAlczogRmFpbGVkIHRvIGFsbG9jYXRlIGJ1ZiBtZW1vcnkbWzBtCgAbWzA7MzFtRSAoJWx1KSAlczogZXNwX3NoYV9kbWFfc3RhcnQgZmFpbGVkLCBubyBETUEgY2hhbm5lbCBhdmFpbGFibGUbWzBtCgAlcyVzCgAlc1Vua25vd24gcmVhc29uICh0aGlzIHNob3VsZCBub3QgaGFwcGVuKQoALS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tAC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0AVGhlIGNlcnRpZmljYXRlIHZhbGlkaXR5IGhhcyBleHBpcmVkAFRoZSBjZXJ0aWZpY2F0ZSBoYXMgYmVlbiByZXZva2VkIChpcyBvbiBhIENSTCkAVGhlIGNlcnRpZmljYXRlIENvbW1vbiBOYW1lIChDTikgZG9lcyBub3QgbWF0Y2ggd2l0aCB0aGUgZXhwZWN0ZWQgQ04AVGhlIGNlcnRpZmljYXRlIGlzIG5vdCBjb3JyZWN0bHkgc2lnbmVkIGJ5IHRoZSB0cnVzdGVkIENBAFRoZSBDUkwgaXMgbm90IGNvcnJlY3RseSBzaWduZWQgYnkgdGhlIHRydXN0ZWQgQ0EAVGhlIENSTCBpcyBleHBpcmVkAENlcnRpZmljYXRlIHdhcyBtaXNzaW5nAENlcnRpZmljYXRlIHZlcmlmaWNhdGlvbiB3YXMgc2tpcHBlZABPdGhlciByZWFzb24gKGNhbiBiZSB1c2VkIGJ5IHZlcmlmeSBjYWxsYmFjaykAVGhlIGNlcnRpZmljYXRlIHZhbGlkaXR5IHN0YXJ0cyBpbiB0aGUgZnV0dXJlAFRoZSBDUkwgaXMgZnJvbSB0aGUgZnV0dXJlAFVzYWdlIGRvZXMgbm90IG1hdGNoIHRoZSBrZXlVc2FnZSBleHRlbnNpb24AVXNhZ2UgZG9lcyBub3QgbWF0Y2ggdGhlIGV4dGVuZGVkS2V5VXNhZ2UgZXh0ZW5zaW9uAFVzYWdlIGRvZXMgbm90IG1hdGNoIHRoZSBuc0NlcnRUeXBlIGV4dGVuc2lvbgBUaGUgY2VydGlmaWNhdGUgaXMgc2lnbmVkIHdpdGggYW4gdW5hY2NlcHRhYmxlIGhhc2guAFRoZSBjZXJ0aWZpY2F0ZSBpcyBzaWduZWQgd2l0aCBhbiB1bmFjY2VwdGFibGUgUEsgYWxnIChlZyBSU0EgdnMgRUNEU0EpLgBUaGUgY2VydGlmaWNhdGUgaXMgc2lnbmVkIHdpdGggYW4gdW5hY2NlcHRhYmxlIGtleSAoZWcgYmFkIGN1cnZlLCBSU0EgdG9vIHNob3J0KS4AVGhlIENSTCBpcyBzaWduZWQgd2l0aCBhbiB1bmFjY2VwdGFibGUgaGFzaC4AVGhlIENSTCBpcyBzaWduZWQgd2l0aCBhbiB1bmFjY2VwdGFibGUgUEsgYWxnIChlZyBSU0EgdnMgRUNEU0EpLgBUaGUgQ1JMIGlzIHNpZ25lZCB3aXRoIGFuIHVuYWNjZXB0YWJsZSBrZXkgKGVnIGJhZCBjdXJ2ZSwgUlNBIHRvbyBzaG9ydCkuACqGSIb3DQEBCAArBgEFBQcIBABJbnZhbGlkIGNvZXhpc3QgYWRhcHRlciBmdW5jdGlvbiBtZDUsIGludGVybmFsOiAlcywgaWRmOiAlcwoASW52YWxpZCBjb2V4aXN0IGkxNTQgZXZlbnQgdHlwZSBmdW5jdGlvbiBtZDUsIGludGVybmFsOiAlcywgaWRmOiAlcwoAY29leGlzdCBhZGFwdGVyIGZ1bmN0aW9uIGlzIE5VTEwAY29leGlzdCBhZGFwdGVyIGZ1bmN0aW9uIHZlcnNpb24gZXJyb3IhIFZlcnNpb24gJXggaXMgZXhwZWN0ZWQsIGJ1dCBpdCBpcyAleAoAY29leGlzdCBhZGFwdGVyIGZ1bmN0aW9uIG1hZ2ljIGVycm9yISBNYWdpYyAleCBpcyBleHBlY3RlZCwgYnV0IGl0IGlzICV4CgBjb2V4IGZpcm13YXJlIHZlcnNpb246ICVzCgAwNmVlNTI3AGRiOTJiYTMAZDk2YzFlNTFmAGNvZXhpc3Qgcm9tIHZlcnNpb24gJXMKAEUgKCVkKSAlczogZXNwIG5vdyBjcmVhdGUgbXV0ZXggZmFpbCEKAEkgKCVkKSAlczogZXNwIG5vdyBhbHJlYWR5IGluaXQhCgBJICglZCkgJXM6IGVzcCBub3cgYWxyZWFkeSBkZWluaXQhCgBFICglZCkgJXM6IGVzcCBub3cgbm90IGluaXQhCgBFICglZCkgJXM6IE1hbGxvYyBwZWVyIGZhaWwKAEUgKCVkKSAlczogaW52YWxpZCBwYXJhbWV0ZXIKAEUgKCVkKSAlczogaW52YWxpZCBmb3JtYXQsIG5lZWQgY2hhbmdlIHBoeSBtb2RlIHRvIExSCgBFICglZCkgJXM6IGludmFsaWQgTFIgcmF0ZSwgbmVlZCBjaGFuZ2UgcmF0ZSB0byBXSUZJX1BIWV9SQVRFX0xPUkFfMjUwSyBvciBXSUZJX1BIWV9SQVRFX0xPUkFfNTAwSwoAM2UwMDc2ZgBJICglZCkgJXM6IGVzcG5vdyBzZW5kIGNiIGViIGlzIG51bGwKAEkgKCVkKSAlczogZXNwbm93IHNlbmQgY2IgZWIgZGVzYyBpcyBudWxsCgBFICglZCkgJXM6IFBlZXIgYWRkciBpcyBudWxsCgBFICglZCkgJXM6IGh3IGtleSBmdWxsCgBFICglZCkgJXM6IEluaXQgYWVzIGVuY3J5cHRpb24gZmFpbCEKAEUgKCVkKSAlczogUmVnaXN0ZXIgc2VuZCBjYWxsIGJhY2sgZmFpbCEKAEkgKCVkKSAlczogZXNwbm93IFt2ZXJzaW9uOiAlZC4wXSBpbml0CgBtYW5hdGljay5jAEUgKCVkKSAlczogJXMgJWQKAEkgKCVkKSAlczogZXNwbm93IFt2ZXJzaW9uOiAlZC4wXSBkZWluaXQKAEUgKCVkKSAlczogUmVjdiBjYWxsIGJhY2sgaXMgTlVMTAoARSAoJWQpICVzOiBTZW5kIGNhbGwgYmFjayBpcyBOVUxMCgBFICglZCkgJXM6IEludmFsaWQgYXJndW1lbnQhCgBFICglZCkgJXM6IFBlZXIgY2hhbm5lbCBpcyBub3QgZXF1YWwgdG8gdGhlIGhvbWUgY2hhbm5lbCwgc2VuZCBmYWlsIQoARSAoJWQpICVzOiBQZWVyIGFkZHJlc3MgaXMgTlVMTAoARSAoJWQpICVzOiBQZWVyIGlzIE5VTEwKAEUgKCVkKSAlczogRW5jcnlwdCBwZWVyIGlzIGZ1bGwKAEUgKCVkKSAlczogbWFsbG9jIGtleSBmYWlsCgBFICglZCkgJXM6IFBlZXIgYWRkcmVzcyBvciBwZWVyIGlzIE5VTEwKAEUgKCVkKSAlczogUGVlciBpcyBmdWxsCgBFICglZCkgJXM6IERvIG5vdCBzdXBwb3J0IGVuY3J5cHRpb24gZm9yIG11bHRpY2FzdCBhZGRyZXNzCgBFICglZCkgJXM6IFBlZXIgY2hhbm5lbCBpcyBpbnZhbGlkCgBFICglZCkgJXM6IFBlZXIgaW50ZXJmYWNlIGlzIGludmFsaWQKAFcgKCVkKQ==

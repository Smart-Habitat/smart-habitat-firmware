t [0;31mE (%lu) %s: %s(%d): task watchdog was never initialized[0m
 [0;31mE (%lu) %s: %s(%d): task is already subscribed[0m
 [0;31mE (%lu) %s: %s(%d): user is already subscribed[0m
 [0;31mE (%lu) %s: %s(%d): task not found[0m
 [0;31mE (%lu) %s: %s(%d): user not found[0m
 [0;31mE (%lu) %s: Aborting.[0m
 [0;31mE (%lu) %s: Print CPU %d (current core) backtrace[0m
 [0;31mE (%lu) %s: Print CPU %d backtrace[0m
 [0;31mE (%lu) %s: %s(%d): TWDT was never initialized[0m
 [0;31mE (%lu) %s: %s(%d): Invalid arguments[0m
 [0;31mE (%lu) %s: %s(%d): TWDT already initialized[0m
 [0;31mE (%lu) %s: %s(%d): insufficient memory[0m
 [0;31mE (%lu) %s: %s(%d): user handle not found[0m
 [0;31mE (%lu) %s: %s(%d): TWDT not initialized yet[0m
  (CPU 0)  (CPU 1)  (CPU 0/1) Task watchdog got triggered. The following tasks/users did not reset the watchdog in time: [0;31mE (%lu) %s: %s[0m
 [0;31mE (%lu) %s:  - %s%s[0m
 
 -  [0;31mE (%lu) %s: CPU %d: %s[0m
 flash_hal [0;31mE (%lu) %s: Target frequency %dMHz higher than supported.[0m
 [0;33mW (%lu) %s: Flash clock frequency round down to %d[0m
 %02x  [0;33mW (%lu) %s: %s[0m
 D (%lu) %s: %s[0m
 V (%lu) %s: %s[0m
 [0;32mI (%lu) %s: %s[0m
 WIFI_NMI WIFI_PWR WIFI_BB BT_MAC BT_BB BT_BB_NMI RWBT RWBLE RWBT_NMI RWBLE_NMI I2C_MASTER SLC0 SLC1 UHCI0 UHCI1 GPIO GPIO_NMI GPIO_INTR_2 GPIO_NMI_2 SPI1 SPI2 SPI3 LCD_CAM I2S0 I2S1 UART0 UART1 UART2 SDIO_HOST PWM0 PWM1 LEDC TWAI USB RTC_CORE PCNT I2C_EXT0 I2C_EXT1 SPI2_DMA SPI3_DMA TIMER1 TIMER2 TG0_T0_LEVEL TG0_T1_LEVEL TG0_WDT_LEVEL TG1_T0_LEVEL TG1_T1_LEVEL TG1_WDT_LEVEL CACHE_IA SYSTIMER_TARGET0 SYSTIMER_TARGET1 SYSTIMER_TARGET2 SPI_MEM_REJECT_CACHE DCACHE_PRELOAD0 ICACHE_PRELOAD0 DCACHE_SYNC0 ICACHE_SYNC0 APB_ADC DMA_IN_CH0 DMA_IN_CH1 DMA_IN_CH2 DMA_IN_CH3 DMA_IN_CH4 DMA_OUT_CH0 DMA_OUT_CH1 DMA_OUT_CH2 DMA_OUT_CH3 DMA_OUT_CH4 RSA AES FROM_CPU_INTR0 FROM_CPU_INTR1 FROM_CPU_INTR2 FROM_CPU_INTR3 ASSIST_DEBUG DMA_APBPERI_PMS CORE0_IRAM0_PMS CORE0_DRAM0_PMS CORE0_PIF_PMS CORE0_PIF_PMS_SIZE CORE1_IRAM0_PMS CORE1_DRAM0_PMS CORE1_PIF_PMS CORE1_PIF_PMS_SIZE BACKUP_PMS_VIOLATE CACHE_CORE0_ACS CACHE_CORE1_ACS USB_SERIAL_JTAG PERI_BACKUP DMA_EXTMEM_REJECT system_api [0;31mE (%lu) %s: %d mac type is incorrect (not found)[0m
 [0;31mE (%lu) %s: eFuse MAC_CUSTOM is empty[0m
 [0;31mE (%lu) %s: MAC address (type %d) is not set in mac table[0m
 [0;31mE (%lu) %s: mac address param is NULL[0m
 [0;31mE (%lu) %s: EFUSE MAC can not be set using this API[0m
 [0;31mE (%lu) %s: Base MAC must be a unicast MAC[0m
 [0;31mE (%lu) %s: Error reading BASE MAC address[0m
 [0;31mE (%lu) %s: unsupported mac type[0m
 [0;31mE (%lu) %s: MAC address generation error[0m
 [0;31mE (%lu) %s: Registered deepsleep callbacks exceeds MAX_DSLP_HOOKS[0m
 [0;31mE (%lu) %s: Deep sleep request is rejected[0m
 [0;31mE (%lu) %s: Incorrect wakeup source (%d) to disable.[0m
 [0;31mE (%lu) %s: Not an RTC IO: GPIO%d[0m
 [0;31mE (%lu) %s: Not an RTC IO Considering io_mask: GPIO%d[0m
 [0;31mE (%lu) %s: %s called, but s_temperature_sensor_power_cnt == 0[0m
 esp_clk_tree [0;31mE (%lu) %s: %s(%d): unknown clk src[0m
 [0;31mE (%lu) %s: %s(%d): unknown precision[0m
 [0;31mE (%lu) %s: %s(%d): freq shouldn't be 0, calibration failed[0m
 dma_utils [0;31mE (%lu) %s: %s(%d): no enough heap memory[0m
 [0;31mE (%lu) %s: %s(%d): wrong size, total size overflow[0m
 adc_share_hw_ctrl [0;31mE (%lu) %s: %s(%d): adc2 lock release without acquiring[0m
 [0;31mE (%lu) %s: %s(%d): adc1 lock release without acquiring[0m
 [0;31mE (%lu) %s: %s called, but `s_adc_digi_ctrlr_cnt == 0`[0m
 [0;32mI (%lu) %s: Code start at 0x%08lx, total %lu, data start at 0x%08lx, total %lu Bytes[0m
 [0;31mE (%lu) %s: %s(%d): Failed to enable CPU power down during light sleep.[0m
 [0;31mE (%lu) %s: %s(%d): Failed to release CPU retention memory[0m
 [0;31mE (%lu) %s: %s(%d): no mem for gdma tx channel[0m
 [0;31mE (%lu) %s: %s(%d): no mem for gdma rx channel[0m
 [0;31mE (%lu) %s: %s(%d): invalid sibling channel[0m
 [0;31mE (%lu) %s: %s(%d): sibling channel should have a di
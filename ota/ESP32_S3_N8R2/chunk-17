[0m
 [0;31mE (%lu) %s: %s(%d): there should be at least 2 DMA buffers[0m
 [0;31mE (%lu) %s: %s(%d): intr_priority should be within 0~7[0m
 [0;31mE (%lu) %s: %s(%d): get i2s object failed[0m
 [0;31mE (%lu) %s: %s(%d): no available channel found[0m
 [0;31mE (%lu) %s: %s(%d): register I2S tx channel failed[0m
 [0;31mE (%lu) %s: %s(%d): register I2S rx channel failed[0m
 [0;31mE (%lu) %s: %s(%d): the channel has already enabled or not initialized[0m
 [0;31mE (%lu) %s: %s(%d): the channel has not been enabled yet[0m
 [0;31mE (%lu) %s: %s(%d): input parameter 'tx_handle' is NULL[0m
 [0;31mE (%lu) %s: %s(%d): this channel is not tx channel[0m
 [0;31mE (%lu) %s: %s(%d): data can only be preloaded when the channel is READY[0m
 [0;31mE (%lu) %s: %s(%d): The channel is not enabled[0m
 [0;31mE (%lu) %s: %s(%d): this channel is not rx channel[0m
 i2s_platform [0;31mE (%lu) %s: %s(%d): invalid i2s port id[0m
 [0;33mW (%lu) %s: i2s controller %d has been occupied by %s[0m
 i2s_std [0;31mE (%lu) %s: %s(%d): failed to free the old dma descriptor[0m
 [0;31mE (%lu) %s: %s(%d): allocate memory for dma descriptor failed[0m
 [0;31mE (%lu) %s: %s(%d): The 'mclk_multiple' should be the multiple of 3 while using 24-bit data width[0m
 [0;31mE (%lu) %s: %s(%d): sample rate is too large for the current clock source[0m
 [0;31mE (%lu) %s: %s(%d): clock calculate failed[0m
 [0;31mE (%lu) %s: %s(%d): bclk invalid[0m
 [0;31mE (%lu) %s: %s(%d): ws invalid[0m
 [0;31mE (%lu) %s: %s(%d): mclk config failed[0m
 [0;31mE (%lu) %s: %s(%d): no memory for storing the configurations[0m
 [0;31mE (%lu) %s: %s(%d): the channel has initialized already[0m
 [0;31mE (%lu) %s: %s(%d): initialize channel failed while setting slot[0m
 [0;31mE (%lu) %s: %s(%d): initialize channel failed while setting clock[0m
 [0;31mE (%lu) %s: %s(%d): initialize channel failed while setting gpio pins[0m
 [0;31mE (%lu) %s: %s(%d): initialize dma interrupt failed[0m
 [0;31mE (%lu) %s: %s(%d): I2S pm lock create failed[0m
 ledc [0;31mE (%lu) %s: Calibrate RC_FAST_CLK failed[0m
 [0;31mE (%lu) %s: %s(%d): speed_mode argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): timer_select argument is invalid[0m
 LEDC is not initialized [0;31mE (%lu) %s: %s(%d): timer clock conflict, already is %d but attempt to %d[0m
 [0;31mE (%lu) %s: requested frequency %d and duty resolution %d can not be achieved, try reducing freq_hz or duty_resolution. div_param=%lu[0m
 [0;31mE (%lu) %s: %s(%d): timer_conf argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): timer_num argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): timer hasn't been configured, or it is still running, please stop it with ledc_timer_pause first[0m
 [0;31mE (%lu) %s: freq_hz=%lu duty_resolution=%lu[0m
 [0;31mE (%lu) %s: %s(%d): ledc_channel argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): gpio_num argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): channel argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): hpoint argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): ledc_conf argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): intr_type argument is invalid[0m
 [0;33mW (%lu) %s: LEDC timer not configured, call ledc_timer_config to set timer frequency[0m
 rmt(legacy) [0;31mE (%lu) %s: %s(%d): RMT CHANNEL ERR[0m
 [0;31mE (%lu) %s: %s(%d): RMT ADDRESS ERR[0m
 [0;31mE (%lu) %s: %s(%d): RMT MEM BLOCK NUM ERR[0m
 [0;31mE (%lu) %s: %s(%d): RMT EVT THRESH ERR[0m
 [0;31mE (%lu) %s: %s(%d): RMT MODE ERROR[0m
 [0;31mE (%lu) %s: %s(%d): RMT GPIO ERROR[0m
 [0;31mE (%lu) %s: %s(%d): set gpio for RMT driver failed[0m
 [0;31mE (%lu) %s: %s(%d): RMT CLK DIV ERR[0m
 [0;31mE (%lu) %s: %s(%d): RMT carrier frequency can't be zero[0m
 [0;33mW (%lu) %s: RMT clock source has been configured to %lu by other channel, now reconfigure it to %lu[0m
 [0;31mE (%lu) %s: %s(%d): initialize RMT driver failed[0m
 [0;31mE (%lu) %s: %s(%d): RMT PARAM LEN ERROR[0m
 [0;31mE (%lu) %s: %s(%d): RMT WR MEM OVERFLOW[0m
 [0;31mE (%lu) %s: %s(%d): RMT driver installed, can not install gene
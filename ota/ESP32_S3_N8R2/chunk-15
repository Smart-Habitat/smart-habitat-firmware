: %s: send_ext_csd_data error 0x%x[0m
 [0;33mW (%lu) %s: %s: unknown CARD_TYPE 0x%x[0m
 [0;31mE (%lu) %s: %s: can't change power class (%d bit), 0x%x[0m
 [0;31mE (%lu) %s: %s: can't change bus width (%d bit), 0x%x[0m
 [0;31mE (%lu) %s: %s: mmc_switch EXT_CSD_HS_TIMING_HS error 0x%x[0m
 [0;31mE (%lu) %s: %s: send_status returned 0x%x[0m
 [0;31mE (%lu) %s: %s: card not in transfer state[0m
 [0;31mE (%lu) %s: %s: Data integrity test fail in HS mode[0m
 sdmmc_sd [0;31mE (%lu) %s: %s: send_if_cond (1) returned 0x%x[0m
 [0;31mE (%lu) %s: %s: set_blocklen returned 0x%x[0m
 [0;31mE (%lu) %s: %s: send_scr (1) returned 0x%x[0m
 [0;31mE (%lu) %s: set_bus_width failed (0x%x)[0m
 [0;31mE (%lu) %s: init wait data ready - timeout[0m
 [0;31mE (%lu) %s: %s: select_card (1) returned 0x%x[0m
 [0;31mE (%lu) %s: %s: select_card (2) returned 0x%x[0m
 [0;33mW (%lu) %s: unexpected: after enabling HS mode, tr_speed=%d[0m
 [0;31mE (%lu) %s: %s: send_scr returned 0x%x[0m
 [0;31mE (%lu) %s: got corrupted data after increasing clock frequency[0m
 [0;31mE (%lu) %s: %s: sdmmc_send_cmd_crc_on_off returned 0x%x[0m
 [0;31mE (%lu) %s: unknown SD CSD structure version 0x%x[0m
 [0;31mE (%lu) %s: %s: could not allocate sd_ssr[0m
 [0;31mE (%lu) %s: %s: error sdmmc_decode_scr returned 0x%x[0m
 usb_phy [0;31mE (%lu) %s: %s(%d): io_num argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): handle argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): mode argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): phy source is not USB_OTG[0m
 [0;31mE (%lu) %s: %s(%d): speed argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): set speed not supported[0m
 [0;31mE (%lu) %s: %s(%d): argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): USB_PHY is not initialized[0m
 [0;31mE (%lu) %s: %s(%d): config argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): specified PHY argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): specified source argument is invalid[0m
 [0;31mE (%lu) %s: %s(%d): no mem for USB_PHY driver[0m
 [0;31mE (%lu) %s: %s(%d): usb_phy driver installation failed[0m
 [0;31mE (%lu) %s: %s(%d): no mem for phy context[0m
 [0;31mE (%lu) %s: %s(%d): selected PHY is in use[0m
 [0;31mE (%lu) %s: %s(%d): no mem for storing I/O pins[0m
 mdns [0;31mE (%lu) %s: Cannot allocate memory (line: %d, free heap: %d bytes)[0m
 arpa ip6 in-addr _sub %s-2 -%d _dns-sd _udp WIFI_STA_DEF ETH_DEF WIFI_AP_DEF mdns_timer [0;33mW (%lu) %s: Please note that hostname must not contain domain name, as mDNS uses '.local' domain[0m
 mdns_networking Unhandled interrupt %d on cpu %d!
 efuse [0;31mE (%lu) %s: Range of data does not match the coding scheme[0m
 [0;31mE (%lu) %s: %s(%d): null pointer[0m
 [0;31mE (%lu) %s: %s(%d): invalid caps[0m
 [0;31mE (%lu) %s: no such vaddr range[0m
 [0;31mE (%lu) %s: %s(%d): paddr must be rounded up to the nearest multiple of CONFIG_MMU_PAGE_SIZE[0m
 [0;31mE (%lu) %s: %s(%d): no mem[0m
 [0;31mE (%lu) %s: paddr block is overlapped with an already mapped paddr block[0m
 [0;33mW (%lu) %s: paddr block is mapped already, vaddr_start: %p, size: 0x%x[0m
 [0;31mE (%lu) %s: %s(%d): munmap target pointer is outside external memory regions[0m
 [0;31mE (%lu) %s: %s(%d): munmap target pointer isn't mapped yet[0m
 [0;31mE (%lu) %s: %s(%d): not a valid external virtual address[0m
 [0;31mE (%lu) %s: %s(%d): vaddr isn't mapped[0m
 gpio [0;31mE (%lu) %s: %s(%d): %s[0m
 GPIO number error GPIO output gpio_num error GPIO interrupt type error GPIO pull mode error [0;31mE (%lu) %s: GPIO_PIN mask error [0m
 [0;32mI (%lu) %s: GPIO[%lu]| InputEn: %d| OutputEn: %d| OpenDrain: %d| Pullup: %d| Pulldown: %d| Intr:%d [0m
 GPIO isr service is not installed, call gpio_install_isr_service() first GPIO ISR null [0;31mE (%lu) %s: esp_ipc_call_blocking failed (0x%x)[0m
 GPIO isr service already installed GPIO drive capability error Only output-capable GPIO support this function RTCIO [0;31mE (%lu) %s: %s(%d): RTCIO number error[0m
 [0;31mE (%lu) %s: %s(%d): invalid channel[0m
 [0;31mE (%lu) %s: %s(%d): rtc_gpio_i
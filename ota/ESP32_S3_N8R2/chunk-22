ac type[0m
 [0;31mE (%lu) %s: MAC address generation error[0m
 [0;31mE (%lu) %s: Registered deepsleep callbacks exceeds MAX_DSLP_HOOKS[0m
 [0;31mE (%lu) %s: Deep sleep request is rejected[0m
 [0;31mE (%lu) %s: Incorrect wakeup source (%d) to disable.[0m
 [0;31mE (%lu) %s: Not an RTC IO: GPIO%d[0m
 [0;31mE (%lu) %s: Not an RTC IO Considering io_mask: GPIO%d[0m
 [0;31mE (%lu) %s: %s called, but s_temperature_sensor_power_cnt == 0[0m
 esp_clk_tree [0;31mE (%lu) %s: %s(%d): unknown clk src[0m
 [0;31mE (%lu) %s: %s(%d): unknown precision[0m
 [0;31mE (%lu) %s: %s(%d): freq shouldn't be 0, calibration failed[0m
 dma_utils [0;31mE (%lu) %s: %s(%d): no enough heap memory[0m
 [0;31mE (%lu) %s: %s(%d): wrong size, total size overflow[0m
 adc_share_hw_ctrl [0;31mE (%lu) %s: %s(%d): adc2 lock release without acquiring[0m
 [0;31mE (%lu) %s: %s(%d): adc1 lock release without acquiring[0m
 [0;31mE (%lu) %s: %s called, but `s_adc_digi_ctrlr_cnt == 0`[0m
 [0;32mI (%lu) %s: Code start at 0x%08lx, total %lu, data start at 0x%08lx, total %lu Bytes[0m
 [0;31mE (%lu) %s: %s(%d): Failed to enable CPU power down during light sleep.[0m
 [0;31mE (%lu) %s: %s(%d): Failed to release CPU retention memory[0m
 [0;31mE (%lu) %s: %s(%d): no mem for gdma tx channel[0m
 [0;31mE (%lu) %s: %s(%d): no mem for gdma rx channel[0m
 [0;31mE (%lu) %s: %s(%d): invalid sibling channel[0m
 [0;31mE (%lu) %s: %s(%d): sibling channel should have a different direction[0m
 [0;31mE (%lu) %s: %s(%d): no mem for pair(%d,%d)[0m
 [0;31mE (%lu) %s: %s(%d): no free gdma channel, search code=%d[0m
 [0;31mE (%lu) %s: %s(%d): channel is using by peripheral: %d[0m
 [0;31mE (%lu) %s: %s(%d): peripheral and DMA system bus mismatch[0m
 [0;31mE (%lu) %s: %s(%d): peripheral %d is already used by another channel[0m
 [0;31mE (%lu) %s: %s(%d): no peripheral is connected to the channel[0m
 [0;31mE (%lu) %s: %s(%d): invalid sram alignment: %zu[0m
 [0;31mE (%lu) %s: %s(%d): psram_alignment(%d) should be multiple of the data_cache_line_size(%lu)[0m
 [0;31mE (%lu) %s: %s(%d): alloc interrupt failed[0m
 [0;31mE (%lu) %s: %s(%d): install interrupt service failed[0m
 [0;31mE (%lu) %s: %s(%d): enable interrupt failed[0m
 [0;31mE (%lu) %s: %s(%d): channel is controlled by ETM[0m
 ESP_FAIL ESP_OK ESP_ERR_NO_MEM ESP_ERR_INVALID_ARG ESP_ERR_INVALID_STATE ESP_ERR_INVALID_SIZE ESP_ERR_NOT_FOUND ESP_ERR_NOT_SUPPORTED ESP_ERR_TIMEOUT ESP_ERR_INVALID_RESPONSE ESP_ERR_INVALID_CRC ESP_ERR_INVALID_VERSION ESP_ERR_INVALID_MAC ESP_ERR_NOT_FINISHED ESP_ERR_NOT_ALLOWED ESP_ERR_NVS_BASE ESP_ERR_NVS_NOT_INITIALIZED ESP_ERR_NVS_NOT_FOUND ESP_ERR_NVS_TYPE_MISMATCH ESP_ERR_NVS_READ_ONLY ESP_ERR_NVS_NOT_ENOUGH_SPACE ESP_ERR_NVS_INVALID_NAME ESP_ERR_NVS_INVALID_HANDLE ESP_ERR_NVS_REMOVE_FAILED ESP_ERR_NVS_KEY_TOO_LONG ESP_ERR_NVS_PAGE_FULL ESP_ERR_NVS_INVALID_STATE ESP_ERR_NVS_INVALID_LENGTH ESP_ERR_NVS_NO_FREE_PAGES ESP_ERR_NVS_VALUE_TOO_LONG ESP_ERR_NVS_PART_NOT_FOUND ESP_ERR_NVS_NEW_VERSION_FOUND ESP_ERR_NVS_XTS_ENCR_FAILED ESP_ERR_NVS_XTS_DECR_FAILED ESP_ERR_NVS_XTS_CFG_FAILED ESP_ERR_NVS_XTS_CFG_NOT_FOUND ESP_ERR_NVS_ENCR_NOT_SUPPORTED ESP_ERR_NVS_KEYS_NOT_INITIALIZED ESP_ERR_NVS_CORRUPT_KEY_PART ESP_ERR_NVS_CONTENT_DIFFERS ESP_ERR_NVS_WRONG_ENCRYPTION ESP_ERR_ULP_BASE ESP_ERR_ULP_SIZE_TOO_BIG ESP_ERR_ULP_INVALID_LOAD_ADDR ESP_ERR_ULP_DUPLICATE_LABEL ESP_ERR_ULP_UNDEFINED_LABEL ESP_ERR_ULP_BRANCH_OUT_OF_RANGE ESP_ERR_OTA_BASE ESP_ERR_OTA_PARTITION_CONFLICT ESP_ERR_OTA_SELECT_INFO_INVALID ESP_ERR_OTA_VALIDATE_FAILED ESP_ERR_OTA_SMALL_SEC_VER ESP_ERR_OTA_ROLLBACK_FAILED ESP_ERR_OTA_ROLLBACK_INVALID_STATE ESP_ERR_EFUSE ESP_OK_EFUSE_CNT ESP_ERR_EFUSE_CNT_IS_FULL ESP_ERR_EFUSE_REPEATED_PROG ESP_ERR_CODING ESP_ERR_NOT_ENOUGH_UNUSED_KEY_BLOCKS ESP_ERR_DAMAGED_READING ESP_ERR_IMAGE_BASE ESP_ERR_IMAGE_FLASH_FAIL ESP_ERR_IMAGE_INVALID ESP_ERR_WIFI_BASE ESP_ERR_WIFI_NOT_INIT ESP_ERR_WIFI_NOT_STARTED ESP_ERR_WIFI_NOT_STOPPED ESP_ERR_WIFI_IF ESP_ERR_WIFI_MODE ESP_ERR_WIFI_STATE ESP_ERR_WIFI_CONN ESP_ERR_WIFI_NVS ESP_ERR_WIFI_MAC ESP_ERR_WIFI_SSID ESP_ERR_WIFI_PA